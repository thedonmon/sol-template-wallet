{"version":3,"sources":["routers/ScrollToTop.tsx","components/NavbarElements.ts","components/web3/Wallet.tsx","components/Navbar.tsx","pages/Page404.tsx","pages/PageHome.tsx","pages/PageTransact.tsx","routers/index.tsx","pages/PageAbout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["withRouter","history","useEffect","unlisten","listen","window","scrollTo","Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","Wallet","network","WalletAdapterNetwork","Devnet","useLocalStorage","endpoint","useMemo","clusterApiUrl","wallets","getPhantomWallet","getSolflareWallet","getSlopeWallet","getTorusWallet","options","clientId","getLedgerWallet","getSolletWallet","enqueueSnackbar","useSnackbar","useCallback","error","message","name","variant","console","autoConnect","Navbar","to","Page404","className","PageHome","style","display","justifyContent","alignItems","height","shortenAddress","address","chars","slice","pages","path","exact","component","props","useState","balance","setBalance","open","severity","undefined","alertState","setAlertState","log","wallet","useWallet","connected","a","publicKey","connection","getBalance","LAMPORTS_PER_SOL","toBase58","toLocaleString","Button","Snackbar","autoHideDuration","onClose","Alert","Routes","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22843000.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\nimport { RouterProps, withRouter } from \"react-router-dom\";\r\n\r\nexport interface ScrollToTopProps {\r\n  history: RouterProps[\"history\"];\r\n}\r\n\r\nconst ScrollToTop: React.FC<ScrollToTopProps> = ({ history }) => {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import { FaBars } from 'react-icons/fa';\nimport { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Nav = styled.nav`\nbackground: #63D471;\nheight: 85px;\ndisplay: flex;\njustify-content: space-between;\npadding: 0.2rem calc((100vw - 1000px) / 2);\nz-index: 12;\n/* Third Nav */\n/* justify-content: flex-start; */\n`;\n\nexport const NavLink = styled(Link)`\ncolor: #808080;\ndisplay: flex;\nalign-items: center;\ntext-decoration: none;\npadding: 0 1rem;\nheight: 100%;\ncursor: pointer;\n&.active {\n\tcolor: #000000;\n}\n`;\n\nexport const Bars = styled(FaBars)`\ndisplay: none;\ncolor: #808080;\n@media screen and (max-width: 768px) {\n\tdisplay: block;\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\ttransform: translate(-100%, 75%);\n\tfont-size: 1.8rem;\n\tcursor: pointer;\n}\n`;\n\nexport const NavMenu = styled.div`\ndisplay: flex;\nalign-items: center;\nmargin-right: -24px;\n/* Second Nav */\n/* margin-right: 24px; */\n/* Third Nav */\n/* width: 100vw;\nwhite-space: nowrap; */\n@media screen and (max-width: 768px) {\n\tdisplay: none;\n}\n`;\n\nexport const NavBtn = styled.nav`\ndisplay: flex;\nalign-items: center;\nmargin-right: 24px;\n/* Third Nav */\n/* justify-content: flex-end;\nwidth: 100vw; */\n@media screen and (max-width: 768px) {\n\tdisplay: none;\n}\n`;\n\nexport const NavBtnLink = styled(Link)`\nborder-radius: 4px;\nbackground: #808080;\npadding: 10px 22px;\ncolor: #000000;\noutline: none;\nborder: none;\ncursor: pointer;\ntransition: all 0.2s ease-in-out;\ntext-decoration: none;\n/* Second Nav */\nmargin-left: 24px;\n&:hover {\n\ttransition: all 0.2s ease-in-out;\n\tbackground: #fff;\n\tcolor: #808080;\n}\n`;\n","import React, { FC, useCallback, useMemo } from 'react';\nimport { ConnectionProvider, useLocalStorage, WalletProvider } from '@solana/wallet-adapter-react';\nimport { WalletAdapterNetwork, WalletError } from '@solana/wallet-adapter-base';\nimport {\n    getLedgerWallet,\n    getPhantomWallet,\n    getSlopeWallet,\n    getSolflareWallet,\n    getSolletWallet,\n    getTorusWallet,\n} from '@solana/wallet-adapter-wallets';\nimport {\n    WalletModalProvider as ReactUIWalletModalProvider,\n    WalletMultiButton as ReactUIWalletMultiButton,\n} from '@solana/wallet-adapter-react-ui';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport { useSnackbar } from 'notistack';\n\nexport const Wallet: FC = () => {\n    // Can be set to 'devnet', 'testnet', or 'mainnet-beta'\n    const network = WalletAdapterNetwork.Devnet;\n    const [autoConnect, setAutoConnect] = useLocalStorage('autoConnect', false);\n\n    // You can also provide a custom RPC endpoint\n    const endpoint = useMemo(() => clusterApiUrl(network), [network]);\n\n    // @solana/wallet-adapter-wallets includes all the adapters but supports tree shaking --\n    // Only the wallets you configure here will be compiled into your application\n    const wallets = useMemo(() => [\n        getPhantomWallet(),\n        getSolflareWallet(),\n        getSlopeWallet(),\n        getTorusWallet({\n            options: { clientId: 'Get a client ID @ https://developer.tor.us' }\n        }),\n        getLedgerWallet(),\n        getSolletWallet({ network }),\n    ], [network]);\n\n    const { enqueueSnackbar } = useSnackbar();\n    const onError = useCallback(\n        (error: WalletError) => {\n            enqueueSnackbar(error.message ? `${error.name}: ${error.message}` : error.name, { variant: 'error' });\n            console.error(error);\n        },\n        [enqueueSnackbar]\n    );\n\n    return (\n        <ConnectionProvider endpoint={endpoint}>\n            <WalletProvider wallets={wallets} autoConnect>\n            <ReactUIWalletModalProvider>\n                <ReactUIWalletMultiButton />\n            </ReactUIWalletModalProvider>\n            </WalletProvider>\n        </ConnectionProvider>\n    );\n};","import React from 'react';\nimport {\n  Nav,\n  NavLink,\n  Bars,\n  NavMenu,\n  NavBtn,\n  NavBtnLink,\n} from './NavbarElements';\nimport { Wallet } from './web3/Wallet';\n  \nfunction Navbar() {\n  return (\n    <>\n      <Nav>\n        <Bars />\n        <NavMenu>\n          <NavLink to='/home'>\n            Home\n          </NavLink>\n          <NavLink to='/about'>\n            About\n          </NavLink>\n          <NavLink to='/transact'>\n            Transact\n          </NavLink>\n        </NavMenu>\n        <Wallet/>\n      </Nav>\n    </>\n  );\n};\n  \nexport default Navbar;","import React from \"react\";\n\nconst Page404: React.FC = () => (\n  <div className=\"nc-Page404\">\n    <div className=\"container relative py-16 lg:py-20\">\n      {/* HEADER */}\n      <header className=\"text-center max-w-2xl mx-auto space-y-7\">\n        <h2 className=\"text-7xl md:text-8xl\">ðŸª”</h2>\n        <h1 className=\"text-8xl md:text-9xl font-semibold tracking-widest\">\n          404\n        </h1>\n        <span className=\"block text-sm text-neutral-800 sm:text-base dark:text-neutral-200 tracking-wider font-medium\">\n          THE PAGE YOU WERE LOOKING FOR DOESN'T EXIST.{\" \"}\n        </span>\n      </header>\n    </div>\n  </div>\n);\n\nexport default Page404;\n","import React from 'react';\n  \nconst PageHome : React.FC = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'Right',\n        alignItems: 'Right',\n        height: '100vh'\n      }}\n    >\n      <h1>This is my homepage!</h1>\n    </div>\n  );\n};\n  \nexport default PageHome;","import { useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { ConnectionProvider, useLocalStorage, useWallet, WalletProvider } from '@solana/wallet-adapter-react';\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\nimport { Wallet } from \"../components/web3/Wallet\";\n\nconst PageTransact = (props: any) => {\n\n  const [balance, setBalance] = useState<number>();\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n  console.log(props);\n  \n  const wallet = useWallet();\n  console.log(\"wallet\",wallet);\n  console.log(\"walleted connected\",wallet.connected);\n  \n  useEffect(() => {\n    (async () => {\n      if (wallet?.publicKey) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n    })();\n  }, [wallet, props.connection]);\n\n  return (\n    <main>\n      {wallet.connected && (\n        <p>Address: {shortenAddress(wallet.publicKey?.toBase58() || \"\")}</p>\n      )}\n\n      {wallet.connected && (\n        <p>Balance: {(balance || 0).toLocaleString()} SOL</p>\n      )}\n\n    <div>\n        {!wallet.connected ? (\n          <h1>Please connect wallet</h1>\n        ) : (\n          <Button>\n          </Button>\n        )}\n      </div>\n\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={6000}\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n    </main>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n const shortenAddress = (address: string, chars = 4): string => {\n    return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n  };\n  \nexport default PageTransact;\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { Page } from \"./types\";\r\nimport ScrollToTop from \"./ScrollToTop\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Page404 from \"../pages/Page404\";\r\nimport PageHome from \"../pages/PageHome\";\r\nimport PageTransact from \"../pages/PageTransact\";\r\nimport PageAbout from \"../pages/PageAbout\";\r\n\r\nexport const pages: Page[] = [\r\n  { path: \"/\", exact: true, component: PageHome },\r\n  { path: \"/#\", exact: true, component: PageHome },\r\n  { path: \"/about\", exact: true, component: PageAbout },\r\n  { path: \"/transact\", exact: true, component: PageTransact }\r\n  //\r\n];\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <ScrollToTop />\r\n      <Navbar />\r\n      <Switch>\r\n        {pages.map(({ component, path, exact }) => {\r\n          return (\r\n            <Route\r\n              key={path}\r\n              component={component}\r\n              exact={!!exact}\r\n              path={path}\r\n            />\r\n          );\r\n        })}\r\n        <Route component={Page404} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\n  \nconst PageAbout : React.FC = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'Right',\n        alignItems: 'Right',\n        height: '100vh'\n      }}\n    >\n      <h1>This is my about page!</h1>\n    </div>\n  );\n};\n  \nexport default PageAbout;","import { SnackbarProvider } from \"notistack\";\nimport React from \"react\";\nimport MyRouter from \"./routers/index\";\n\nfunction App() {\n  return (\n    <SnackbarProvider>\n    <div className=\"bg-white text-base dark:bg-neutral-900 text-neutral-900 dark:text-neutral-200\">\n      <MyRouter />\n    </div>\n   </SnackbarProvider>\n  );\n}\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}